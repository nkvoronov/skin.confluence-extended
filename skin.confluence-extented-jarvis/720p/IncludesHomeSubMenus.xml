<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include name="HomeSubMenuDisplay">
		<control type="group" id="9001">
        	<depth>DepthMenu-</depth>
			<left>0</left>
			<top>70</top>
			<onup>9000</onup>
			<ondown condition="!Skin.HasSetting(LowerMenu)">9002</ondown>
			<ondown condition="Skin.HasSetting(LowerMenu)">20</ondown>            
			<include>HomeSubMenuDown</include>
            <!-- SubMenu01 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu01)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9010).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9010).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9010).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9010).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9010).NumItems,1)">conditional</animation>
				<control type="list" id="9010">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9010</onleft>
					<onright>9010</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu01</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9010).NumItems,6) | !Container(9010).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9010).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9010).NumItems,6) + Container(9010).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9010</onleft>
					<onright>9010</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9010,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9010).NumItems,6) + Container(9010).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9010).NumItems,6) |  !Container(9010).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9010).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9010).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9010).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9010).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9010).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9010).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9010).NumItems,6) + Container(9010).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9010</onleft>
					<onright>9010</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9010,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9010).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9010).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9010).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9010).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9010).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9010).NumItems,6) + Container(9010).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu02 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu02)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9011).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9011).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9011).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9011).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9011).NumItems,1)">conditional</animation>
				<control type="list" id="9011">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9011</onleft>
					<onright>9011</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu02</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9011).NumItems,6) | !Container(9011).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9011).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9011).NumItems,6) + Container(9011).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9011</onleft>
					<onright>9011</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9011,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9011).NumItems,6) + Container(9011).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9011).NumItems,6) |  !Container(9011).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9011).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9011).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9011).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9011).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9011).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9011).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9011).NumItems,6) + Container(9011).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9011</onleft>
					<onright>9011</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9011,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9011).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9011).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9011).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9011).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9011).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9011).NumItems,6) + Container(9011).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu03 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu03)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9012).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9012).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9012).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9012).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9012).NumItems,1)">conditional</animation>
				<control type="list" id="9012">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9012</onleft>
					<onright>9012</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu03</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9012).NumItems,6) | !Container(9012).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9012).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9012).NumItems,6) + Container(9012).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9012</onleft>
					<onright>9012</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9012,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9012).NumItems,6) + Container(9012).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9012).NumItems,6) |  !Container(9012).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9012).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9012).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9012).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9012).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9012).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9012).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9012).NumItems,6) + Container(9012).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9012</onleft>
					<onright>9012</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9012,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9012).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9012).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9012).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9012).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9012).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9012).NumItems,6) + Container(9012).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu04 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu04)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9013).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9013).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9013).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9013).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9013).NumItems,1)">conditional</animation>
				<control type="list" id="9013">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9013</onleft>
					<onright>9013</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu04</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9013).NumItems,6) | !Container(9013).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9013).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9013).NumItems,6) + Container(9013).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9013</onleft>
					<onright>9013</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9013,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9013).NumItems,6) + Container(9013).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9013).NumItems,6) |  !Container(9013).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9013).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9013).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9013).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9013).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9013).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9013).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9013).NumItems,6) + Container(9013).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9013</onleft>
					<onright>9013</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9013,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9013).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9013).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9013).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9013).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9013).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9013).NumItems,6) + Container(9013).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu05 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu05)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9014).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9014).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9014).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9014).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9014).NumItems,1)">conditional</animation>
				<control type="list" id="9014">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9014</onleft>
					<onright>9014</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu05</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9014).NumItems,6) | !Container(9014).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9014).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9014).NumItems,6) + Container(9014).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9014</onleft>
					<onright>9014</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9014,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9014).NumItems,6) + Container(9014).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9014).NumItems,6) |  !Container(9014).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9014).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9014).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9014).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9014).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9014).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9014).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9014).NumItems,6) + Container(9014).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9014</onleft>
					<onright>9014</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9014,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9014).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9014).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9014).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9014).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9014).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9014).NumItems,6) + Container(9014).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu06 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu06)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9015).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9015).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9015).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9015).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9015).NumItems,1)">conditional</animation>
				<control type="list" id="9015">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9015</onleft>
					<onright>9015</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu06</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9015).NumItems,6) | !Container(9015).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9015).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9015).NumItems,6) + Container(9015).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9015</onleft>
					<onright>9015</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9015,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9015).NumItems,6) + Container(9015).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9015).NumItems,6) |  !Container(9015).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9015).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9015).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9015).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9015).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9015).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9015).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9015).NumItems,6) + Container(9015).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9015</onleft>
					<onright>9015</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9015,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9015).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9015).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9015).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9015).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9015).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9015).NumItems,6) + Container(9015).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu07 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu07)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9016).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9016).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9016).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9016).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9016).NumItems,1)">conditional</animation>
				<control type="list" id="9016">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9016</onleft>
					<onright>9016</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu07</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9016).NumItems,6) | !Container(9016).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9016).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9016).NumItems,6) + Container(9016).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9016</onleft>
					<onright>9016</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9016,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9016).NumItems,6) + Container(9016).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9016).NumItems,6) |  !Container(9016).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9016).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9016).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9016).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9016).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9016).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9016).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9016).NumItems,6) + Container(9016).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9016</onleft>
					<onright>9016</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9016,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9016).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9016).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9016).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9016).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9016).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9016).NumItems,6) + Container(9016).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu08 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu08)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9017).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9017).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9017).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9017).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9017).NumItems,1)">conditional</animation>
				<control type="list" id="9017">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9017</onleft>
					<onright>9017</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu08</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9017).NumItems,6) | !Container(9017).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9017).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9017).NumItems,6) + Container(9017).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9017</onleft>
					<onright>9017</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9017,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9017).NumItems,6) + Container(9017).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9017).NumItems,6) |  !Container(9017).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9017).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9017).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9017).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9017).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9017).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9017).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9017).NumItems,6) + Container(9017).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9017</onleft>
					<onright>9017</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9017,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9017).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9017).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9017).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9017).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9017).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9017).NumItems,6) + Container(9017).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu09 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu09)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9018).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9018).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9018).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9018).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9018).NumItems,1)">conditional</animation>
				<control type="list" id="9018">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9018</onleft>
					<onright>9018</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu09</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9018).NumItems,6) | !Container(9018).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9018).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9018).NumItems,6) + Container(9018).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9018</onleft>
					<onright>9018</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9018,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9018).NumItems,6) + Container(9018).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9018).NumItems,6) |  !Container(9018).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9018).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9018).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9018).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9018).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9018).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9018).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9018).NumItems,6) + Container(9018).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9018</onleft>
					<onright>9018</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9018,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9018).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9018).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9018).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9018).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9018).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9018).NumItems,6) + Container(9018).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu10 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu10)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9019).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9019).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9019).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9019).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9019).NumItems,1)">conditional</animation>
				<control type="list" id="9019">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9019</onleft>
					<onright>9019</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu10</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9019).NumItems,6) | !Container(9019).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9019).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9019).NumItems,6) + Container(9019).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9019</onleft>
					<onright>9019</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9019,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9019).NumItems,6) + Container(9019).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9019).NumItems,6) |  !Container(9019).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9019).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9019).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9019).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9019).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9019).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9019).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9019).NumItems,6) + Container(9019).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9019</onleft>
					<onright>9019</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9019,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9019).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9019).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9019).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9019).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9019).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9019).NumItems,6) + Container(9019).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu11 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu11)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9020).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9020).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9020).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9020).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9020).NumItems,1)">conditional</animation>
				<control type="list" id="9020">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9020</onleft>
					<onright>9020</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu11</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9020).NumItems,6) | !Container(9020).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9020).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9020).NumItems,6) + Container(9020).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9020</onleft>
					<onright>9020</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9020,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9020).NumItems,6) + Container(9020).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9020).NumItems,6) |  !Container(9020).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9020).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9020).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9020).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9020).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9020).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9020).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9020).NumItems,6) + Container(9020).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9020</onleft>
					<onright>9020</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9020,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9020).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9020).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9020).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9020).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9020).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9020).NumItems,6) + Container(9020).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu12 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu12)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9021).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9021).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9021).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9021).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9021).NumItems,1)">conditional</animation>
				<control type="list" id="9021">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9021</onleft>
					<onright>9021</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu12</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9021).NumItems,6) | !Container(9021).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9021).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9021).NumItems,6) + Container(9021).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9021</onleft>
					<onright>9021</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9021,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9021).NumItems,6) + Container(9021).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9021).NumItems,6) |  !Container(9021).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9021).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9021).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9021).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9021).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9021).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9021).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9021).NumItems,6) + Container(9021).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9021</onleft>
					<onright>9021</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9021,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9021).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9021).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9021).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9021).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9021).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9021).NumItems,6) + Container(9021).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu13 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu13)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9022).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9022).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9022).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9022).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9022).NumItems,1)">conditional</animation>
				<control type="list" id="9022">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9022</onleft>
					<onright>9022</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu13</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9022).NumItems,6) | !Container(9022).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9022).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9022).NumItems,6) + Container(9022).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9022</onleft>
					<onright>9022</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9022,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9022).NumItems,6) + Container(9022).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9022).NumItems,6) |  !Container(9022).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9022).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9022).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9022).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9022).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9022).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9022).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9022).NumItems,6) + Container(9022).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9022</onleft>
					<onright>9022</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9022,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9022).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9022).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9022).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9022).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9022).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9022).NumItems,6) + Container(9022).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu14 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu14)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9023).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9023).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9023).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9023).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9023).NumItems,1)">conditional</animation>
				<control type="list" id="9023">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9023</onleft>
					<onright>9023</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu14</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9023).NumItems,6) | !Container(9023).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9023).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9023).NumItems,6) + Container(9023).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9023</onleft>
					<onright>9023</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9023,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9023).NumItems,6) + Container(9023).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9023).NumItems,6) |  !Container(9023).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9023).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9023).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9023).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9023).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9023).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9023).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9023).NumItems,6) + Container(9023).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9023</onleft>
					<onright>9023</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9023,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9023).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9023).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9023).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9023).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9023).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9023).NumItems,6) + Container(9023).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu15 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu15)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9024).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9024).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9024).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9024).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9024).NumItems,1)">conditional</animation>
				<control type="list" id="9024">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9024</onleft>
					<onright>9024</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu15</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9024).NumItems,6) | !Container(9024).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9024).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9024).NumItems,6) + Container(9024).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9024</onleft>
					<onright>9024</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9024,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9024).NumItems,6) + Container(9024).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9024).NumItems,6) |  !Container(9024).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9024).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9024).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9024).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9024).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9024).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9024).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9024).NumItems,6) + Container(9024).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9024</onleft>
					<onright>9024</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9024,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9024).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9024).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9024).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9024).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9024).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9024).NumItems,6) + Container(9024).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu16 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu16)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9025).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9025).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9025).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9025).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9025).NumItems,1)">conditional</animation>
				<control type="list" id="9025">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9025</onleft>
					<onright>9025</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu16</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9025).NumItems,6) | !Container(9025).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9025).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9025).NumItems,6) + Container(9025).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9025</onleft>
					<onright>9025</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9025,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9025).NumItems,6) + Container(9025).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9025).NumItems,6) |  !Container(9025).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9025).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9025).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9025).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9025).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9025).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9025).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9025).NumItems,6) + Container(9025).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9025</onleft>
					<onright>9025</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9025,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9025).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9025).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9025).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9025).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9025).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9025).NumItems,6) + Container(9025).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu17 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu17)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9026).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9026).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9026).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9026).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9026).NumItems,1)">conditional</animation>
				<control type="list" id="9026">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9026</onleft>
					<onright>9026</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu17</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9026).NumItems,6) | !Container(9026).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9026).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9026).NumItems,6) + Container(9026).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9026</onleft>
					<onright>9026</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9026,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9026).NumItems,6) + Container(9026).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9026).NumItems,6) |  !Container(9026).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9026).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9026).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9026).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9026).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9026).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9026).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9026).NumItems,6) + Container(9026).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9026</onleft>
					<onright>9026</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9026,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9026).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9026).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9026).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9026).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9026).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9026).NumItems,6) + Container(9026).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu18 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu18)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9027).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9027).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9027).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9027).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9027).NumItems,1)">conditional</animation>
				<control type="list" id="9027">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9027</onleft>
					<onright>9027</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu18</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9027).NumItems,6) | !Container(9027).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9027).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9027).NumItems,6) + Container(9027).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9027</onleft>
					<onright>9027</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9027,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9027).NumItems,6) + Container(9027).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9027).NumItems,6) |  !Container(9027).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9027).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9027).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9027).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9027).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9027).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9027).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9027).NumItems,6) + Container(9027).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9027</onleft>
					<onright>9027</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9027,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9027).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9027).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9027).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9027).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9027).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9027).NumItems,6) + Container(9027).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu19 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu19)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9028).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9028).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9028).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9028).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9028).NumItems,1)">conditional</animation>
				<control type="list" id="9028">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9028</onleft>
					<onright>9028</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu19</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9028).NumItems,6) | !Container(9028).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9028).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9028).NumItems,6) + Container(9028).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9028</onleft>
					<onright>9028</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9028,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9028).NumItems,6) + Container(9028).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9028).NumItems,6) |  !Container(9028).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9028).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9028).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9028).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9028).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9028).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9028).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9028).NumItems,6) + Container(9028).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9028</onleft>
					<onright>9028</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9028,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9028).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9028).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9028).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9028).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9028).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9028).NumItems,6) + Container(9028).HasNext</visible>
				</control>
			</control>
            <!-- SubMenu20 -->
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubMenu20)</visible>
				<include>HomeSubMenuCommonAnimation</include>
				<animation effect="slide" start="0,0" end="95,0" time="0" condition="StringCompare(Container(9029).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="190,0" time="0" condition="StringCompare(Container(9029).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="285,0" time="0" condition="StringCompare(Container(9029).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="StringCompare(Container(9029).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="475,0" time="0" condition="StringCompare(Container(9029).NumItems,1)">conditional</animation>
				<control type="list" id="9029">
					<include>HomeSubMenuCommonValues</include>
					<onleft>9029</onleft>
					<onright>9029</onright>
					<include>HomeSubMenuCommonLayout</include>
					<include>HomeSubMenu20</include>
				</control>
				<control type="image">
					<left>5</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="30,0" time="0" condition="!IntegerGreaterThan(Container(9029).NumItems,6) | !Container(9029).HasPrevious">conditional</animation>
					<visible>IntegerGreaterThan(Container(9029).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>40</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9029).NumItems,6) + Container(9029).HasPrevious</visible>
                </control>
				<control type="button" id="800">
					<left>45</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-left.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-left.png</texturenofocus>
					<onleft>9029</onleft>
					<onright>9029</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9029,-1)</onclick>
					<visible>IntegerGreaterThan(Container(9029).NumItems,6) + Container(9029).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1240</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-30,0" time="0" condition="!IntegerGreaterThan(Container(9029).NumItems,6) |  !Container(9029).HasNext">conditional</animation>
					<animation effect="slide" start="0,0" end="-190,0" time="0" condition="StringCompare(Container(9029).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-380,0" time="0" condition="StringCompare(Container(9029).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-570,0" time="0" condition="StringCompare(Container(9029).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-760,0" time="0" condition="StringCompare(Container(9029).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-950,0" time="0" condition="StringCompare(Container(9029).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9029).NumItems,0)</visible>
				</control>
                <control type="image">
                    <left>1205</left>
                    <top>0</top>
                    <width>35</width>
                    <height>35</height>
                    <texture border="5">HomeSubNF.png</texture>
                    <visible>IntegerGreaterThan(Container(9029).NumItems,6) + Container(9029).HasNext</visible>
                </control>
				<control type="button" id="801">
					<left>1210</left>
					<top>5</top>
					<width>25</width>
					<height>25</height>
					<texturefocus border="0,0,0,3">arrow-big-right.png</texturefocus>
					<texturenofocus border="0,0,0,3">arrow-big-right.png</texturenofocus>
					<onleft>9029</onleft>
					<onright>9029</onright>
					<onup>9000</onup>
					<include>HomeSubMenuDown</include>
					<onclick>Control.Move(9029,1)</onclick>
					<animation effect="slide" start="0,0" end="-205,0" time="0" condition="StringCompare(Container(9029).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-410,0" time="0" condition="StringCompare(Container(9029).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-615,0" time="0" condition="StringCompare(Container(9029).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-820,0" time="0" condition="StringCompare(Container(9029).NumItems,2)">conditional</animation>
                    <animation effect="slide" start="0,0" end="-1025,0" time="0" condition="StringCompare(Container(9029).NumItems,1)">conditional</animation>
					<visible>IntegerGreaterThan(Container(9029).NumItems,6) + Container(9029).HasNext</visible>
				</control>
			</control>            
		</control>
	</include>
	<include name="HomeSubMenuCommonValues">
		<left>70</left>
		<top>0</top>
		<width>1140</width>
		<height>35</height>
		<viewtype label="535">list</viewtype>
		<pagecontrol>-</pagecontrol>
		<scrolltime>200</scrolltime>
		<orientation>Horizontal</orientation>
		<onup>9000</onup>
		<ondown condition="!Skin.HasSetting(HideFavoritesButton)">21</ondown>
        <ondown condition="Skin.HasSetting(HideFavoritesButton) + !Skin.HasSetting(HidePowerButton)">20</ondown>
	</include>
	<include name="HomeSubMenuCommonAnimation">
        <animation effect="slide" start="0,-40" end="0,0" delay="200" time="200" tween="quadratic" easing="out" condition="!Skin.HasSetting(NoSlide)">Visible</animation>
		<animation effect="slide" start="0,0" end="0,-40" time="200" tween="quadratic" easing="out" condition="!Skin.HasSetting(NoSlide)">Hidden</animation>
		<animation effect="fade" start="100" end="0" time="300" condition="!ControlGroup(9001).HasFocus + Skin.HasSetting(NoSlide)">conditional</animation>
		<animation effect="slide" start="0,-40" end="0,0" delay="200" time="200" tween="quadratic" easing="out"  condition="ControlGroup(9001).HasFocus + Skin.HasSetting(NoSlide)">conditional</animation>
		<animation effect="slide" start="0,0" end="0,-40" time="200" tween="quadratic" easing="out" condition="ControlGroup(9001).HasFocus + Skin.HasSetting(NoSlide)">Hidden</animation>       
		<animation effect="fade" start="100" end="65" time="200" condition="Window.IsVisible(2123) | Window.IsVisible(2124) | Window.IsVisible(2125) | Window.IsVisible(Favourites)">conditional</animation>
	</include>
	<include name="HomeSubMenuCommonLayout">
		<itemlayout height="35" width="190">
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>190</width>
				<height>35</height>
				<texture border="5">HomeSubNF.png</texture>
			</control>
			<control type="label">
				<left>0</left>
				<top>0</top>
				<height>35</height>
				<width>180</width>
				<font>font12</font>
				<textcolor>grey2</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
			</control>
		</itemlayout>
		<focusedlayout height="35" width="190">
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>190</width>
				<height>35</height>
				<texture border="5">HomeSubNF.png</texture>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>190</width>
				<height>35</height>
				<texture border="5">HomeSubFO.png</texture>
				<visible>ControlGroup(9001).HasFocus</visible>
			</control>
			<control type="label">
				<left>0</left>
				<top>0</top>
				<height>35</height>
				<width>180</width>
				<font>font12</font>
				<textcolor>grey2</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<left>0</left>
				<top>0</top>
				<height>35</height>
				<width>180</width>
				<font>font12</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<visible>ControlGroup(9001).HasFocus</visible>
			</control>
		</focusedlayout>
	</include>    
	<include name="HomeSubMenu01">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu01.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu01.1.Path))">$INFO[Skin.String(SubMenu01.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu01.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu01.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu01.2.Path))">$INFO[Skin.String(SubMenu01.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu01.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu01.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu01.3.Path))">$INFO[Skin.String(SubMenu01.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu01.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu01.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu01.4.Path))">$INFO[Skin.String(SubMenu01.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu01.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu01.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu01.5.Path))">$INFO[Skin.String(SubMenu01.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu01.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu01.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu01.6.Path))">$INFO[Skin.String(SubMenu01.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu01.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu01.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu01.7.Path))">$INFO[Skin.String(SubMenu01.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu01.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu01.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu01.8.Path))">$INFO[Skin.String(SubMenu01.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu01.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu01.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu01.9.Path))">$INFO[Skin.String(SubMenu01.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu01.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu01.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu01.10.Path))">$INFO[Skin.String(SubMenu01.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu01.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu02">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu02.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu02.1.Path))">$INFO[Skin.String(SubMenu02.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu02.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu02.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu02.2.Path))">$INFO[Skin.String(SubMenu02.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu02.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu02.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu02.3.Path))">$INFO[Skin.String(SubMenu02.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu02.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu02.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu02.4.Path))">$INFO[Skin.String(SubMenu02.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu02.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu02.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu02.5.Path))">$INFO[Skin.String(SubMenu02.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu02.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu02.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu02.6.Path))">$INFO[Skin.String(SubMenu02.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu02.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu02.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu02.7.Path))">$INFO[Skin.String(SubMenu02.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu02.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu02.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu02.8.Path))">$INFO[Skin.String(SubMenu02.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu02.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu02.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu02.9.Path))">$INFO[Skin.String(SubMenu02.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu02.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu02.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu02.10.Path))">$INFO[Skin.String(SubMenu02.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu02.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu03">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu03.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu03.1.Path))">$INFO[Skin.String(SubMenu03.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu03.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu03.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu03.2.Path))">$INFO[Skin.String(SubMenu03.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu03.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu03.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu03.3.Path))">$INFO[Skin.String(SubMenu03.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu03.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu03.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu03.4.Path))">$INFO[Skin.String(SubMenu03.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu03.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu03.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu03.5.Path))">$INFO[Skin.String(SubMenu03.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu03.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu03.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu03.6.Path))">$INFO[Skin.String(SubMenu03.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu03.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu03.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu03.7.Path))">$INFO[Skin.String(SubMenu03.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu03.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu03.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu03.8.Path))">$INFO[Skin.String(SubMenu03.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu03.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu03.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu03.9.Path))">$INFO[Skin.String(SubMenu03.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu03.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu03.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu03.10.Path))">$INFO[Skin.String(SubMenu03.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu03.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu04">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu04.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu04.1.Path))">$INFO[Skin.String(SubMenu04.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu04.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu04.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu04.2.Path))">$INFO[Skin.String(SubMenu04.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu04.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu04.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu04.3.Path))">$INFO[Skin.String(SubMenu04.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu04.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu04.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu04.4.Path))">$INFO[Skin.String(SubMenu04.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu04.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu04.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu04.5.Path))">$INFO[Skin.String(SubMenu04.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu04.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu04.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu04.6.Path))">$INFO[Skin.String(SubMenu04.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu04.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu04.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu04.7.Path))">$INFO[Skin.String(SubMenu04.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu04.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu04.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu04.8.Path))">$INFO[Skin.String(SubMenu04.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu04.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu04.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu04.9.Path))">$INFO[Skin.String(SubMenu04.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu04.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu04.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu04.10.Path))">$INFO[Skin.String(SubMenu04.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu04.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu05">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu05.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu05.1.Path))">$INFO[Skin.String(SubMenu05.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu05.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu05.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu05.2.Path))">$INFO[Skin.String(SubMenu05.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu05.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu05.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu05.3.Path))">$INFO[Skin.String(SubMenu05.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu05.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu05.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu05.4.Path))">$INFO[Skin.String(SubMenu05.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu05.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu05.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu05.5.Path))">$INFO[Skin.String(SubMenu05.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu05.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu05.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu05.6.Path))">$INFO[Skin.String(SubMenu05.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu05.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu05.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu05.7.Path))">$INFO[Skin.String(SubMenu05.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu05.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu05.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu05.8.Path))">$INFO[Skin.String(SubMenu05.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu05.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu05.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu05.9.Path))">$INFO[Skin.String(SubMenu05.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu05.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu05.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu05.10.Path))">$INFO[Skin.String(SubMenu05.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu05.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu06">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu06.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu06.1.Path))">$INFO[Skin.String(SubMenu06.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu06.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu06.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu06.2.Path))">$INFO[Skin.String(SubMenu06.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu06.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu06.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu06.3.Path))">$INFO[Skin.String(SubMenu06.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu06.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu06.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu06.4.Path))">$INFO[Skin.String(SubMenu06.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu06.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu06.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu06.5.Path))">$INFO[Skin.String(SubMenu06.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu06.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu06.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu06.6.Path))">$INFO[Skin.String(SubMenu06.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu06.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu06.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu06.7.Path))">$INFO[Skin.String(SubMenu06.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu06.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu06.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu06.8.Path))">$INFO[Skin.String(SubMenu06.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu06.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu06.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu06.9.Path))">$INFO[Skin.String(SubMenu06.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu06.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu06.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu06.10.Path))">$INFO[Skin.String(SubMenu06.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu06.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu07">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu07.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu07.1.Path))">$INFO[Skin.String(SubMenu07.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu07.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu07.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu07.2.Path))">$INFO[Skin.String(SubMenu07.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu07.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu07.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu07.3.Path))">$INFO[Skin.String(SubMenu07.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu07.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu07.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu07.4.Path))">$INFO[Skin.String(SubMenu07.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu07.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu07.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu07.5.Path))">$INFO[Skin.String(SubMenu07.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu07.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu07.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu07.6.Path))">$INFO[Skin.String(SubMenu07.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu07.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu07.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu07.7.Path))">$INFO[Skin.String(SubMenu07.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu07.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu07.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu07.8.Path))">$INFO[Skin.String(SubMenu07.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu07.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu07.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu07.9.Path))">$INFO[Skin.String(SubMenu07.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu07.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu07.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu07.10.Path))">$INFO[Skin.String(SubMenu07.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu07.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu08">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu08.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu08.1.Path))">$INFO[Skin.String(SubMenu08.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu08.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu08.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu08.2.Path))">$INFO[Skin.String(SubMenu08.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu08.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu08.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu08.3.Path))">$INFO[Skin.String(SubMenu08.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu08.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu08.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu08.4.Path))">$INFO[Skin.String(SubMenu08.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu08.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu08.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu08.5.Path))">$INFO[Skin.String(SubMenu08.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu08.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu08.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu08.6.Path))">$INFO[Skin.String(SubMenu08.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu08.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu08.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu08.7.Path))">$INFO[Skin.String(SubMenu08.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu08.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu08.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu08.8.Path))">$INFO[Skin.String(SubMenu08.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu08.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu08.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu08.9.Path))">$INFO[Skin.String(SubMenu08.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu08.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu08.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu08.10.Path))">$INFO[Skin.String(SubMenu08.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu08.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu09">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu09.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu09.1.Path))">$INFO[Skin.String(SubMenu09.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu09.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu09.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu09.2.Path))">$INFO[Skin.String(SubMenu09.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu09.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu09.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu09.3.Path))">$INFO[Skin.String(SubMenu09.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu09.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu09.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu09.4.Path))">$INFO[Skin.String(SubMenu09.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu09.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu09.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu09.5.Path))">$INFO[Skin.String(SubMenu09.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu09.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu09.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu09.6.Path))">$INFO[Skin.String(SubMenu09.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu09.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu09.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu09.7.Path))">$INFO[Skin.String(SubMenu09.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu09.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu09.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu09.8.Path))">$INFO[Skin.String(SubMenu09.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu09.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu09.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu09.9.Path))">$INFO[Skin.String(SubMenu09.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu09.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu09.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu09.10.Path))">$INFO[Skin.String(SubMenu09.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu09.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu10">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu10.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu10.1.Path))">$INFO[Skin.String(SubMenu10.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu10.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu10.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu10.2.Path))">$INFO[Skin.String(SubMenu10.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu10.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu10.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu10.3.Path))">$INFO[Skin.String(SubMenu10.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu10.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu10.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu10.4.Path))">$INFO[Skin.String(SubMenu10.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu10.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu10.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu10.5.Path))">$INFO[Skin.String(SubMenu10.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu10.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu10.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu10.6.Path))">$INFO[Skin.String(SubMenu10.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu10.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu10.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu10.7.Path))">$INFO[Skin.String(SubMenu10.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu10.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu10.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu10.8.Path))">$INFO[Skin.String(SubMenu10.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu10.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu10.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu10.9.Path))">$INFO[Skin.String(SubMenu10.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu10.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu10.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu10.10.Path))">$INFO[Skin.String(SubMenu10.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu10.10.Path))</visible>
            </item>
        </content>
    </include>    
	<include name="HomeSubMenu11">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu11.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu11.1.Path))">$INFO[Skin.String(SubMenu11.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu11.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu11.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu11.2.Path))">$INFO[Skin.String(SubMenu11.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu11.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu11.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu11.3.Path))">$INFO[Skin.String(SubMenu11.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu11.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu11.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu11.4.Path))">$INFO[Skin.String(SubMenu11.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu11.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu11.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu11.5.Path))">$INFO[Skin.String(SubMenu11.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu11.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu11.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu11.6.Path))">$INFO[Skin.String(SubMenu11.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu11.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu11.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu11.7.Path))">$INFO[Skin.String(SubMenu11.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu11.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu11.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu11.8.Path))">$INFO[Skin.String(SubMenu11.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu11.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu11.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu11.9.Path))">$INFO[Skin.String(SubMenu11.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu11.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu11.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu11.10.Path))">$INFO[Skin.String(SubMenu11.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu11.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu12">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu12.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu12.1.Path))">$INFO[Skin.String(SubMenu12.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu12.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu12.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu12.2.Path))">$INFO[Skin.String(SubMenu12.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu12.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu12.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu12.3.Path))">$INFO[Skin.String(SubMenu12.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu12.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu12.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu12.4.Path))">$INFO[Skin.String(SubMenu12.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu12.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu12.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu12.5.Path))">$INFO[Skin.String(SubMenu12.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu12.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu12.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu12.6.Path))">$INFO[Skin.String(SubMenu12.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu12.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu12.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu12.7.Path))">$INFO[Skin.String(SubMenu12.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu12.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu12.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu12.8.Path))">$INFO[Skin.String(SubMenu12.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu12.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu12.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu12.9.Path))">$INFO[Skin.String(SubMenu12.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu12.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu12.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu12.10.Path))">$INFO[Skin.String(SubMenu12.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu12.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu13">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu13.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu13.1.Path))">$INFO[Skin.String(SubMenu13.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu13.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu13.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu13.2.Path))">$INFO[Skin.String(SubMenu13.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu13.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu13.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu13.3.Path))">$INFO[Skin.String(SubMenu13.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu13.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu13.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu13.4.Path))">$INFO[Skin.String(SubMenu13.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu13.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu13.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu13.5.Path))">$INFO[Skin.String(SubMenu13.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu13.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu13.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu13.6.Path))">$INFO[Skin.String(SubMenu13.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu13.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu13.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu13.7.Path))">$INFO[Skin.String(SubMenu13.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu13.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu13.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu13.8.Path))">$INFO[Skin.String(SubMenu13.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu13.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu13.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu13.9.Path))">$INFO[Skin.String(SubMenu13.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu13.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu13.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu13.10.Path))">$INFO[Skin.String(SubMenu13.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu13.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu14">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu14.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu14.1.Path))">$INFO[Skin.String(SubMenu14.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu14.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu14.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu14.2.Path))">$INFO[Skin.String(SubMenu14.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu14.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu14.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu14.3.Path))">$INFO[Skin.String(SubMenu14.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu14.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu14.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu14.4.Path))">$INFO[Skin.String(SubMenu14.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu14.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu14.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu14.5.Path))">$INFO[Skin.String(SubMenu14.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu14.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu14.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu14.6.Path))">$INFO[Skin.String(SubMenu14.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu14.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu14.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu14.7.Path))">$INFO[Skin.String(SubMenu14.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu14.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu14.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu14.8.Path))">$INFO[Skin.String(SubMenu14.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu14.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu14.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu14.9.Path))">$INFO[Skin.String(SubMenu14.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu14.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu14.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu14.10.Path))">$INFO[Skin.String(SubMenu14.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu14.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu15">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu15.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu15.1.Path))">$INFO[Skin.String(SubMenu15.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu15.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu15.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu15.2.Path))">$INFO[Skin.String(SubMenu15.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu15.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu15.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu15.3.Path))">$INFO[Skin.String(SubMenu15.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu15.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu15.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu15.4.Path))">$INFO[Skin.String(SubMenu15.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu15.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu15.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu15.5.Path))">$INFO[Skin.String(SubMenu15.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu15.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu15.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu15.6.Path))">$INFO[Skin.String(SubMenu15.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu15.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu15.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu15.7.Path))">$INFO[Skin.String(SubMenu15.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu15.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu15.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu15.8.Path))">$INFO[Skin.String(SubMenu15.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu15.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu15.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu15.9.Path))">$INFO[Skin.String(SubMenu15.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu15.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu15.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu15.10.Path))">$INFO[Skin.String(SubMenu15.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu15.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu16">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu16.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu16.1.Path))">$INFO[Skin.String(SubMenu16.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu16.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu16.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu16.2.Path))">$INFO[Skin.String(SubMenu16.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu16.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu16.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu16.3.Path))">$INFO[Skin.String(SubMenu16.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu16.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu16.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu16.4.Path))">$INFO[Skin.String(SubMenu16.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu16.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu16.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu16.5.Path))">$INFO[Skin.String(SubMenu16.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu16.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu16.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu16.6.Path))">$INFO[Skin.String(SubMenu16.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu16.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu16.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu16.7.Path))">$INFO[Skin.String(SubMenu16.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu16.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu16.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu16.8.Path))">$INFO[Skin.String(SubMenu16.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu16.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu16.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu16.9.Path))">$INFO[Skin.String(SubMenu16.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu16.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu16.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu16.10.Path))">$INFO[Skin.String(SubMenu16.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu16.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu17">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu17.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu17.1.Path))">$INFO[Skin.String(SubMenu17.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu17.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu17.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu17.2.Path))">$INFO[Skin.String(SubMenu17.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu17.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu17.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu17.3.Path))">$INFO[Skin.String(SubMenu17.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu17.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu17.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu17.4.Path))">$INFO[Skin.String(SubMenu17.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu17.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu17.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu17.5.Path))">$INFO[Skin.String(SubMenu17.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu17.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu17.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu17.6.Path))">$INFO[Skin.String(SubMenu17.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu17.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu17.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu17.7.Path))">$INFO[Skin.String(SubMenu17.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu17.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu17.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu17.8.Path))">$INFO[Skin.String(SubMenu17.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu17.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu17.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu17.9.Path))">$INFO[Skin.String(SubMenu17.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu17.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu17.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu17.10.Path))">$INFO[Skin.String(SubMenu17.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu17.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu18">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu18.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu18.1.Path))">$INFO[Skin.String(SubMenu18.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu18.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu18.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu18.2.Path))">$INFO[Skin.String(SubMenu18.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu18.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu18.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu18.3.Path))">$INFO[Skin.String(SubMenu18.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu18.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu18.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu18.4.Path))">$INFO[Skin.String(SubMenu18.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu18.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu18.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu18.5.Path))">$INFO[Skin.String(SubMenu18.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu18.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu18.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu18.6.Path))">$INFO[Skin.String(SubMenu18.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu18.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu18.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu18.7.Path))">$INFO[Skin.String(SubMenu18.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu18.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu18.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu18.8.Path))">$INFO[Skin.String(SubMenu18.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu18.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu18.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu18.9.Path))">$INFO[Skin.String(SubMenu18.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu18.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu18.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu18.10.Path))">$INFO[Skin.String(SubMenu18.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu18.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu19">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu19.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu19.1.Path))">$INFO[Skin.String(SubMenu19.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu19.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu19.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu19.2.Path))">$INFO[Skin.String(SubMenu19.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu19.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu19.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu19.3.Path))">$INFO[Skin.String(SubMenu19.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu19.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu19.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu19.4.Path))">$INFO[Skin.String(SubMenu19.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu19.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu19.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu19.5.Path))">$INFO[Skin.String(SubMenu19.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu19.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu19.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu19.6.Path))">$INFO[Skin.String(SubMenu19.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu19.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu19.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu19.7.Path))">$INFO[Skin.String(SubMenu19.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu19.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu19.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu19.8.Path))">$INFO[Skin.String(SubMenu19.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu19.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu19.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu19.9.Path))">$INFO[Skin.String(SubMenu19.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu19.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu19.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu19.10.Path))">$INFO[Skin.String(SubMenu19.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu19.10.Path))</visible>
            </item>
        </content>
    </include>
	<include name="HomeSubMenu20">
        <content>
            <item>
                <label>$INFO[Skin.String(SubMenu20.1.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu20.1.Path))">$INFO[Skin.String(SubMenu20.1.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu20.1.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu20.2.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu20.2.Path))">$INFO[Skin.String(SubMenu20.2.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu20.2.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu20.3.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu20.3.Path))">$INFO[Skin.String(SubMenu20.3.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu20.3.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu20.4.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu20.4.Path))">$INFO[Skin.String(SubMenu20.4.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu20.4.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu20.5.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu20.5.Path))">$INFO[Skin.String(SubMenu20.5.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu20.5.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu20.6.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu20.6.Path))">$INFO[Skin.String(SubMenu20.6.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu20.6.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu20.7.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu20.7.Path))">$INFO[Skin.String(SubMenu20.7.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu20.7.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu20.8.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu20.8.Path))">$INFO[Skin.String(SubMenu20.8.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu20.8.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu20.9.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu20.9.Path))">$INFO[Skin.String(SubMenu20.9.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu20.9.Path))</visible>
            </item>
            <item>
                <label>$INFO[Skin.String(SubMenu20.10.Label)]</label>
                <onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
                <onclick condition="!IsEmpty(Skin.String(SubMenu20.10.Path))">$INFO[Skin.String(SubMenu20.10.Path)]</onclick>
                <visible>!IsEmpty(Skin.String(SubMenu20.10.Path))</visible>
            </item>
        </content>
    </include>    
    <include name="HomeSubMenuFavourites">
		<content>
			<item>
				<label>$INFO[Window(0).Property(favourite.1.name)]</label>
				<onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
				<onclick>$INFO[Window(0).Property(favourite.1.path)]</onclick>
				<visible>!IsEmpty(Window(0).Property(favourite.1.name))</visible>
				<visible>!IsEmpty(Window(0).Property(favourite.1.path))</visible>
			</item>
			<item>
				<label>$INFO[Window(0).Property(favourite.2.name)]</label>
				<onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
				<onclick>$INFO[Window(0).Property(favourite.2.path)]</onclick>
				<visible>!IsEmpty(Window(0).Property(favourite.2.name))</visible>
				<visible>!IsEmpty(Window(0).Property(favourite.2.path))</visible>
			</item>
			<item>
				<label>$INFO[Window(0).Property(favourite.3.name)]</label>
				<onclick>$INFO[Window(0).Property(favourite.3.path)]</onclick>
				<onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
				<visible>!IsEmpty(Window(0).Property(favourite.3.name))</visible>
				<visible>!IsEmpty(Window(0).Property(favourite.3.path))</visible>
			</item>
			<item>
				<label>$INFO[Window(0).Property(favourite.4.name)]</label>
				<onclick>$INFO[Window(0).Property(favourite.4.path)]</onclick>
				<onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
				<visible>!IsEmpty(Window(0).Property(favourite.4.name))</visible>
				<visible>!IsEmpty(Window(0).Property(favourite.4.path))</visible>
			</item>
			<item>
				<label>$INFO[Window(0).Property(favourite.5.name)]</label>
				<onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
				<onclick>$INFO[Window(0).Property(favourite.5.path)]</onclick>
				<visible>!IsEmpty(Window(0).Property(favourite.5.name))</visible>
				<visible>!IsEmpty(Window(0).Property(favourite.5.path))</visible>
			</item>
			<item>
				<label>$INFO[Window(0).Property(favourite.6.name)]</label>
				<onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
				<onclick>$INFO[Window(0).Property(favourite.6.path)]</onclick>
				<visible>!IsEmpty(Window(0).Property(favourite.6.name))</visible>
				<visible>!IsEmpty(Window(0).Property(favourite.6.path))</visible>
			</item>
			<item>
				<label>$INFO[Window(0).Property(favourite.7.name)]</label>
				<onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
				<onclick>$INFO[Window(0).Property(favourite.7.path)]</onclick>
				<visible>!IsEmpty(Window(0).Property(favourite.7.name))</visible>
				<visible>!IsEmpty(Window(0).Property(favourite.7.path))</visible>
			</item>
			<item>
				<label>$INFO[Window(0).Property(favourite.8.name)]</label>
				<onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
				<onclick>$INFO[Window(0).Property(favourite.8.path)]</onclick>
				<visible>!IsEmpty(Window(0).Property(favourite.8.name))</visible>
				<visible>!IsEmpty(Window(0).Property(favourite.8.path))</visible>
			</item>
			<item>
				<label>$INFO[Window(0).Property(favourite.9.name)]</label>
				<onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
				<onclick>$INFO[Window(0).Property(favourite.9.path)]</onclick>
				<visible>!IsEmpty(Window(0).Property(favourite.9.name))</visible>
				<visible>!IsEmpty(Window(0).Property(favourite.9.path))</visible>
			</item>
			<item>
				<label>$INFO[Window(0).Property(favourite.10.name)]</label>
				<onclick>SetProperty(MenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
				<onclick>$INFO[Window(0).Property(favourite.10.path)]</onclick>
				<visible>!IsEmpty(Window(0).Property(favourite.10.name))</visible>
				<visible>!IsEmpty(Window(0).Property(favourite.10.path))</visible>
			</item>
		</content>
	</include>
    <include name="HomeSubMenuDown">
        <ondown condition="!Skin.HasSetting(HideFavoritesButton)">21</ondown>
		<ondown condition="Skin.HasSetting(HideFavoritesButton) + !Skin.HasSetting(HidePowerButton)">20</ondown>
    </include>    
</includes>